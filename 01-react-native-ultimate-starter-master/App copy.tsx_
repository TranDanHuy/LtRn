import { useState } from "react";
import {
  Button,
  FlatList,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  View,
} from "react-native";
import InputTodo from "./components/todo/input.todo";
import ListTodo from "./components/todo/list.todo";
import FlexBox from "./components/todo/flexbox";
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';

export default function App() {
  const [todoList, setTodoList] = useState<ITodo[]>([]);

  function randomInteger(min: number, max: number) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

  const addTodo = (text: string) => {
    
    const todo = {id: randomInteger(1, 10000), title: text}
    setTodoList([...todoList, todo]);
  }

  const deleteTodo = (id: number) => {
    const newTodo =  todoList.filter(todo => todo.id != id);
    setTodoList(newTodo)
  }


  
const Stack = createNativeStackNavigator();

function HomeScreen() {
  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      <Text>Home Screen</Text>
    </View>
  );
}
  return (

    //<FlexBox/>
    
    //<View style={styles.container}>
      //<InputTodo addTodo={addTodo}/>
      //<ListTodo 
      //todoList={todoList}
      //deleteTodo={deleteTodo}
      ///>
      
    //</View> */}

    
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="Home" component={HomeScreen} />
      </Stack.Navigator>
    </NavigationContainer>

  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fff",
    //alignItems: 'center',
    //justifyContent: 'center',
    fontSize: 60,
    color: "red",
    paddingTop: 20,
    paddingHorizontal: 20,
    marginTop: 50,
  },
  test: {
    color: "blue",
  },
  test1: {
    color: "green",
  },
  test2: {
    color: "blue",
  },
});
import { useState } from "react";
import {
  Button,
  FlatList,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  View,
} from "react-native";

import { NavigationContainer, useRoute } from "@react-navigation/native";
import { createNativeStackNavigator } from "@react-navigation/native-stack";
import { useNavigation } from "@react-navigation/native";
import "react-native-gesture-handler";
import { createDrawerNavigator } from "@react-navigation/drawer";
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import Ionicons from "@expo/vector-icons/Ionicons"
import Home from "./components/learn/home";
import HomeDetail from "./components/learn/home.detail";

export default function App() {
  const Stack = createNativeStackNavigator();
  const Drawer = createDrawerNavigator();
  const Tab = createBottomTabNavigator();


  return (
    <NavigationContainer>
      {/* <Stack.Navigator 
      screenOptions={{
        headerStyle: {
          backgroundColor: '#f4511e',
        },
        headerTintColor: '#fff',
        headerTitleStyle: {
          fontWeight: 'bold',
        },
      }}
      
      >
        <Stack.Screen name="Home"
         component={HomeScreen}
         options={{headerTitle: "Trang chủ"}} />
        <Stack.Screen name="Details"
         component={DetailsScreen}
         options={({route}: {route: any} ) => ({
          headerTitle: `Xem chi tiết ${route?.params?.userId ?? ""}`,
          })} />
      </Stack.Navigator> */}

      {/* <Drawer.Navigator initialRouteName="Article">
        <Drawer.Screen name="Feed" options={{headerTitle: "Trang chủ"}} component={HomeScreen} />
        <Drawer.Screen name="Article" component={DetailsScreen} />
      </Drawer.Navigator> */}

      <Tab.Navigator 
      screenOptions={({ route }) => ({
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;

            if (route.name === 'Home') {
              iconName = focused
                ? 'american-football'
                : 'american-football-outline';
            } else if (route.name === 'Settings') {
              iconName = focused ? 'aperture' : 'aperture-outline';
            }

            // You can return any component that you like here!
            return <Ionicons name={iconName as any} 
            size={size} color={color} />;
          },
          tabBarActiveTintColor: 'tomato',
          tabBarInactiveTintColor: 'gray',
        })}>
        <Tab.Screen name="Home" component={Home} />
        <Tab.Screen name="Settings" component={HomeDetail} />
      </Tab.Navigator>
    </NavigationContainer>
  );
}

